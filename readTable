import psycopg2
import json
import os

def lambda_handler(event, context):
    # Database connection parameters
    db_params = {
        "dbname": os.getenv('DB_NAME'),
        "user": os.getenv('DB_USER'),
        "password": os.getenv('DB_PASSWORD'),
        "host": os.getenv('DB_HOST'),
        "port": os.getenv('DB_PORT')
    }
    
    # Name of the table to query
    table_name = event.get('table_name', 'your_default_table')
    
    # SQL query to fetch all rows from the specified table
    query = f"SELECT * FROM {table_name};"
    
    try:
        # Connect to the PostgreSQL database
        conn = psycopg2.connect(**db_params)
        cursor = conn.cursor()
        
        # Execute the query
        cursor.execute(query)
        
        # Fetch all rows
        rows = cursor.fetchall()
        
        # Get column names
        column_names = [desc[0] for desc in cursor.description]
        
        # Prepare the response
        response = {
            "statusCode": 200,
            "body": json.dumps({
                "columns": column_names,
                "rows": [dict(zip(column_names, row)) for row in rows]
            })
        }
    
    except (Exception, psycopg2.DatabaseError) as error:
        response = {
            "statusCode": 500,
            "body": json.dumps({
                "error": str(error)
            })
        }
    
    finally:
        # Close the cursor and connection
        if cursor:
            cursor.close()
        if conn:
            conn.close()
    
    return response